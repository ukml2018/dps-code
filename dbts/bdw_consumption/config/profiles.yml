default:
  outputs:
    snowflake:
      type: snowflake
      threads: 16
      client_session_keep_alive: False
      account: "{{ env_var('DBT_ACCOUNT') }}"
      user: "{{ env_var('DBT_ENV_SECRET_USER') }}"
      password: "{{ env_var('DBT_ENV_SECRET_PASSWORD') }}"
      role: "{{ env_var('DBT_DB_ROLE') }}"
      database: "{{ env_var('DBT_DB') }}"
      warehouse: "{{ env_var('DBT_WH') }}"
      schema: "{{ env_var('DBT_SCHEMA') }}"
    redshift:
      type: redshift
      threads: 16
      host: "{{ env_var('REDSHIFT_DB_SERVER') }}"
      user: "{{ env_var('REDSHIFT_DB_USER') }}"
      password: "{{ env_var('REDSHIFT_DB_PASSWORD') }}"
      port: "{{ env_var('REDSHIFT_DB_PORT', '5439') | int }}"
      dbname: "{{ env_var('REDSHIFT_DB_NAME') }}"
      schema: "{{ env_var('REDSHIFT_DB_SCHEMA') }}"
      connect_timeout: 20 # optional, number of seconds before connection times out 
      sslmode: prefer # optional, set the sslmode to connect to the database. Default prefer, which will use 'verify-ca' to connect.
      # role: # optional
      ra3_node: true # enables cross-database sources
      autocommit: true # enables autocommit after each statement
      # region: # optional
    synapse:
      type: synapse
      threads: 16
      driver: 'ODBC Driver 18 for SQL Server' # (The ODBC Driver installed on your system)
      server: "{{ env_var('SYNAPSE_DB_SERVER') }}" # (Dedicated SQL endpoint of your workspace here)
      port: "{{ env_var('SYNAPSE_DB_PORT') | int }}"
      database: "{{ env_var('SYNAPSE_DB_NAME') }}"
      schema: "default"
      user: "{{ env_var('SYNAPSE_DB_USER') }}"
      password: "{{ env_var('SYNAPSE_DB_PASSWORD') }}"
    bigquery:
      type: bigquery
      method: service-account
      project: "{{ env_var('BIGQUERY_PROJECT_ID') }}"
      dataset: "{{ env_var('BIGQUERY_DATASET') }}"
      threads: 16
      timeout_seconds: 20
      keyfile: "{{ env_var('BIGQUERY_KEYFILE') }}"
    postgres:
      type: postgres
      host: "{{ env_var('POSTGRES_DB_SERVER') }}"
      user: "{{ env_var('POSTGRES_DB_USER') }}"
      password: "{{ env_var('POSTGRES_DB_PASSWORD') }}"
      port: "{{ env_var('POSTGRES_DB_PORT', '5432') | int }}"
      dbname: "{{ env_var('POSTGRES_DB_NAME') }}" # or database instead of dbname
      schema: "{{ env_var('POSTGRES_DB_SCHEMA') }}"
      threads: 16
      keepalives_idle: 0 # default 0, indicating the system default. See below
      connect_timeout: 10 # default 10 seconds
      
  target: postgres
