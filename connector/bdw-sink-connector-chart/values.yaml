# Default values for bdw-sink-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 517824631004.dkr.ecr.us-east-1.amazonaws.com/bdw-sink-connector
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

envFrom:
  - configMapRef:
      name: sink-env-configmap
  - secretRef:
      name: sink-env-secret

configEnvs:
  KAFKA_BOOTSTRAP_SERVERS: "b-3.dps-dev-msk-cluster.vfjd4n.c24.kafka.us-east-1.amazonaws.com:9096"
  KAFKA_SASL_USERNAME: "aws-msk-connect"
  KAFKA_SASL_MECHANISM: "SCRAM-SHA-512"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  SINK_DB_SCHEMA: "rawdata"
  # SINK_DB_USERNAME: "dujing@cn.ibm.com"
  # SINK_DB_HOST: "fra00296.snowflakecomputing.com"
  # SINK_DB_ACCOUNT: "fra00296"
  # SINK_DB_DATABASE: "DPS_AEP_DEMO_DEV"
  # SINK_DB_WAREHOUSE: "DPS_ADMIN_WAREHOUSE"
  # SINK_DB_ROLE: "DPS_DEV_ROLE"
  # SINK_DRIVER: "snowflake"
  # SINK_DB_PORT: 443
  # SINK_DB_USERNAME: "dmc_dev"
  # SINK_DB_HOST: "wg-mda-dmc-dev.517824631004.us-east-1.redshift-serverless.amazonaws.com"
  # SINK_DB_DATABASE: "bdw-dev"
  # SINK_DRIVER: "redshift+redshift_connector"
  # SINK_DB_PORT: "5439"

  SINK_DB_USERNAME: "sqladminuser"
  SINK_DB_HOST: "synps-ws-mda-dev-eastus-001.sql.azuresynapse.net"
  SINK_DB_DATABASE: "BDW"
  SINK_DRIVER: "mssql+pyodbc"
  SINK_DB_PORT: "1433"

  MAX_WORKERS: "64"

secretEnvs:
  SINK_DB_PASSWORD: "xxx"
  KAFKA_SASL_PASSWORD: "xxx"
  
    
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 2
  #   memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  keyfile: bigquery_keyfile
  configFile:
    bigquery_keyfile.json: |
      {
        "type": "service_account",
        "project_id": "tonal-baton-325617",
        "private_key_id": "498ec75ad944f5a6373e56014892da0abb8be992",
        "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCrvYcFWN6VDW2m\n+tiScTHvGZifto9heTgyB8fZmU8u55ANkeBrOhojQRcOR+JCCJaXkC5Zn2ru+yia\nJ2vS2IzbOqxp4RYpPL65+Q2mrqFdaK8lZ1mGR9d/TFYIo+vEZuxtb/PZphH9FrPL\n95Sm03003/FEkzekAXni3ViLRIvMRkpcuuEprP0tgEhIsKidEdd1BTu7xGL9xkgj\nmdRrzgsFYg5h5wxgsbEfT+U0UIaEkbu+y8FOLOjU/V/VtgsPxCMxehSGb6FvEA/X\nwv9RxzTPuDj9MpUqNVIalbPhGbsKu8Z21l2L9vMS/oSB6nlR2JqKdqOE+xoa7/q5\nrpAbixh7AgMBAAECggEAPM1oeK2qfAXZjPUhaNNXlOmwfdcR8zYJ/biAelsLTDVi\nbFN5qyzSZSndwkoT4kINItLCfitxHfPgv5b2Vxsg31rqAMBWarodYlU5DoqkCaCO\n5cStztsvgduiWAPE7G9uBB7PK/7ePobjl/Jq+BdHLEmeryMZ32BAaV/pQcE+Z07k\nOBtnXS7MbH71etU8AJrim07/S8R4ENRA4o9YjPGT71l025pfvTch7LjC21C5CFwb\nh+DIt1K6DbDRHvI/xnKniaRBlvxnVlhieH6Y1FZ61EGNSGy7q7vtjvPX8FNP0Q7U\nDrEuRA2LjWtVEhrh3fkLwnMaBwRG6eJoEZfeG0LvIQKBgQDoChP5u6qEqXXWGesG\nBipRMZCn4awFuCcqFi/f9YJ5ERfFAJFZlSap3vpCDf4sNgyF85zMeHwQRGS3Aswm\nlgG/mtHlhOXH22wh/6u/B2VimhVGoMVM2gAWISw/vF8zrnFQ0rM1LG3Zbv5Ie6yr\ntCJzS9ZjcADtGf4hsJ/3EW2QGwKBgQC9eXRnqzLRRn+WNtcrONdekEYG5KavRKLV\nT9v+bAWThZPqQCCkG9mu4bo87k9vplPIPR7rH8699X3g03M/wHvIF9Cid31vEzoW\ntndTUt5rFCba1pwB5jGGG7iV7lqSFK7k80gz1CSblex361e/j62a/rYt4wEM4OO0\nIQcN6ezfIQKBgQCH58c1YR6Jnvt+kCWgnKHSdnZkbgAkRWzi8KXPxetKX6GNaDy5\nvGst2YS4hZuWZ33EQyBWfkcj+/sFWeUawId7owFHLiSrfzABZc9BDuLp8pd9i5Kj\n5ZdhXsKc/gbArW5/STlfbotUa/cRmyZSVypKX2PNT/+q36uCLgIzYojKewKBgQCm\nPFgn2GlGeR7ZkRXpAv7aJaR6ycOAhKyEkINITkf6LTkgTdEViqXLLJp0ePVS1NAv\nH4jv60E9IpSlW3+DEILJhDN1R3bSrEDLyp0Yit0/fzezypSnieorakjhqnTmM6Va\nlCPl7RuNMdV9RQsAs7MyCIWX7tFuFiVRVaTVzUYYYQKBgHGu+KJk/dit5svVCTEo\n600/hQRZ7t7ccSEAtRoUX6uEvBTwAzj/nM3D9QW02CLt3ifc06mMQU6oDLuLQ9tu\nAVdurM7PpTPhKfJrlCkzP71u+wo8S/VQteN0k45rPho/yNKRaqoKur16fP0tnh4j\nPFrKlLR8bKMoUkMzsjveCoek\n-----END PRIVATE KEY-----\n",
        "client_email": "dbt-user@tonal-baton-325617.iam.gserviceaccount.com",
        "client_id": "106979687215427521330",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/dbt-user%40tonal-baton-325617.iam.gserviceaccount.com",
        "universe_domain": "googleapis.com"
      }
  